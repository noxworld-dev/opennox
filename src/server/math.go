package server

import (
	"image"
	"math"

	"github.com/noxworld-dev/opennox-lib/types"
)

// RoundCoord rounds float coordinate in range [0, N) to be used as a map key.
func RoundCoord(v float32) int {
	if float64(v) < 0.0 {
		return int(int32(v))
	}
	v = float32(float64(v)/85 + 8.388608e+06)
	return int(int32(math.Float32bits(v) & 0x7FFFFF))
}

// RoundPos is similar to RoundCoord, but accepts a point.
func RoundPos(p types.Pointf) image.Point {
	return image.Pt(RoundCoord(p.X), RoundCoord(p.Y))
}

// DirFromVec converts arbitrary vector into angle value which is integer ranged 0-255.
func DirFromVec(p types.Pointf) Dir16 {
	v := int32((math.Atan2(float64(p.Y), float64(p.X))+6.2831855)*40.743664 + 0.5)
	return Dir16(uint8(v))
}

func sincosDir(d byte) (cos, sin float32) { // 194136, 194140
	v := sincosDirTable[d]
	return v[0], v[1]
}

func DoorSize(dir byte) image.Point {
	return doorSize[dir]
}

func PointOnTheLine(p1, p2 types.Pointf, a2 types.Pointf) (out types.Pointf, ok bool) { // nox_xxx_mathPointOnTheLine_57C8A0
	dpx := float64(p2.X - p1.X)
	dpy := float64(p2.Y - p1.Y)
	d2 := dpy*dpy + dpx*dpx
	dd := float64(a2.Y-p1.Y)*dpy + float64(a2.X-p1.X)*dpx
	out.X = float32(dpx*dd/d2 + float64(p1.X))
	out.Y = float32(dpy*dd/d2 + float64(p1.Y))
	var min, max types.Pointf
	if p1.X >= p2.X {
		min.X = p2.X
		max.X = p1.X
	} else {
		min.X = p1.X
		max.X = p2.X
	}
	if p1.Y >= p2.Y {
		max.Y = p1.Y
		min.Y = p2.Y
	} else {
		min.Y = p1.Y
		max.Y = p2.Y
	}
	return out, min.X <= out.X && out.X <= max.X && min.Y <= out.Y && out.Y <= max.Y
}

var doorSize = []image.Point{
	{-23, -23},
	{-18, -27},
	{-12, -30},
	{-6, -31},
	{0, -32},
	{6, -31},
	{12, -30},
	{18, -27},
	{23, -23},
	{27, -18},
	{30, -12},
	{31, -6},
	{32, 0},
	{31, 6},
	{30, 12},
	{27, 18},
	{23, 23},
	{18, 27},
	{12, 30},
	{6, 31},
	{0, 32},
	{-6, 31},
	{-12, 30},
	{-18, 27},
	{-23, 23},
	{-27, 18},
	{-30, 12},
	{-31, 6},
	{-32, 0},
	{-31, -6},
	{-30, -12},
	{-27, -18},
}

var sincosDirTable = [][2]float32{
	{1, 0},
	{0.9996988, 0.02454123},
	{0.99879545, 0.04906767},
	{0.99729043, 0.07356456},
	{0.9951847, 0.09801714},
	{0.9924795, 0.12241068},
	{0.9891765, 0.14673047},
	{0.98527765, 0.17096189},
	{0.98078525, 0.19509032},
	{0.9757021, 0.21910124},
	{0.97003126, 0.24298018},
	{0.96377605, 0.26671275},
	{0.95694035, 0.2902847},
	{0.94952816, 0.31368175},
	{0.94154406, 0.33688986},
	{0.9329928, 0.35989505},
	{0.9238795, 0.38268343},
	{0.9142098, 0.4052413},
	{0.9039893, 0.42755508},
	{0.8932243, 0.44961134},
	{0.88192123, 0.47139674},
	{0.87008697, 0.4928982},
	{0.8577286, 0.51410276},
	{0.8448536, 0.53499764},
	{0.8314696, 0.55557024},
	{0.8175848, 0.57580817},
	{0.8032075, 0.5956993},
	{0.7883464, 0.6152316},
	{0.77301043, 0.6343933},
	{0.7572088, 0.65317285},
	{0.7409511, 0.671559},
	{0.7242471, 0.68954057},
	{0.70710677, 0.70710677},
	{0.68954057, 0.7242471},
	{0.671559, 0.7409511},
	{0.65317285, 0.7572088},
	{0.6343933, 0.77301043},
	{0.6152316, 0.7883464},
	{0.5956993, 0.8032075},
	{0.57580817, 0.8175848},
	{0.55557024, 0.8314696},
	{0.53499764, 0.8448536},
	{0.51410276, 0.8577286},
	{0.4928982, 0.87008697},
	{0.47139674, 0.88192123},
	{0.44961134, 0.8932243},
	{0.42755508, 0.9039893},
	{0.4052413, 0.9142098},
	{0.38268343, 0.9238795},
	{0.35989505, 0.9329928},
	{0.33688986, 0.94154406},
	{0.31368175, 0.94952816},
	{0.2902847, 0.95694035},
	{0.26671275, 0.96377605},
	{0.24298018, 0.97003126},
	{0.21910124, 0.9757021},
	{0.19509032, 0.98078525},
	{0.17096189, 0.98527765},
	{0.14673047, 0.9891765},
	{0.12241068, 0.9924795},
	{0.09801714, 0.9951847},
	{0.07356456, 0.99729043},
	{0.04906767, 0.99879545},
	{0.02454123, 0.9996988},
	{0, 1},
	{-0.02454123, 0.9996988},
	{-0.04906767, 0.99879545},
	{-0.07356456, 0.99729043},
	{-0.09801714, 0.9951847},
	{-0.12241068, 0.9924795},
	{-0.14673047, 0.9891765},
	{-0.17096189, 0.98527765},
	{-0.19509032, 0.98078525},
	{-0.21910124, 0.9757021},
	{-0.24298018, 0.97003126},
	{-0.26671275, 0.96377605},
	{-0.2902847, 0.95694035},
	{-0.31368175, 0.94952816},
	{-0.33688986, 0.94154406},
	{-0.35989505, 0.9329928},
	{-0.38268343, 0.9238795},
	{-0.4052413, 0.9142098},
	{-0.42755508, 0.9039893},
	{-0.44961134, 0.8932243},
	{-0.47139674, 0.88192123},
	{-0.4928982, 0.87008697},
	{-0.51410276, 0.8577286},
	{-0.53499764, 0.8448536},
	{-0.55557024, 0.8314696},
	{-0.57580817, 0.8175848},
	{-0.5956993, 0.8032075},
	{-0.6152316, 0.7883464},
	{-0.6343933, 0.77301043},
	{-0.65317285, 0.7572088},
	{-0.671559, 0.7409511},
	{-0.68954057, 0.7242471},
	{-0.70710677, 0.70710677},
	{-0.7242471, 0.68954057},
	{-0.7409511, 0.671559},
	{-0.7572088, 0.65317285},
	{-0.77301043, 0.6343933},
	{-0.7883464, 0.6152316},
	{-0.8032075, 0.5956993},
	{-0.8175848, 0.57580817},
	{-0.8314696, 0.55557024},
	{-0.8448536, 0.53499764},
	{-0.8577286, 0.51410276},
	{-0.87008697, 0.4928982},
	{-0.88192123, 0.47139674},
	{-0.8932243, 0.44961134},
	{-0.9039893, 0.42755508},
	{-0.9142098, 0.4052413},
	{-0.9238795, 0.38268343},
	{-0.9329928, 0.35989505},
	{-0.94154406, 0.33688986},
	{-0.94952816, 0.31368175},
	{-0.95694035, 0.2902847},
	{-0.96377605, 0.26671275},
	{-0.97003126, 0.24298018},
	{-0.9757021, 0.21910124},
	{-0.98078525, 0.19509032},
	{-0.98527765, 0.17096189},
	{-0.9891765, 0.14673047},
	{-0.9924795, 0.12241068},
	{-0.9951847, 0.09801714},
	{-0.99729043, 0.07356456},
	{-0.99879545, 0.04906767},
	{-0.9996988, 0.02454123},
	{-1, 0},
	{-0.9996988, -0.02454123},
	{-0.99879545, -0.04906767},
	{-0.99729043, -0.07356456},
	{-0.9951847, -0.09801714},
	{-0.9924795, -0.12241068},
	{-0.9891765, -0.14673047},
	{-0.98527765, -0.17096189},
	{-0.98078525, -0.19509032},
	{-0.9757021, -0.21910124},
	{-0.97003126, -0.24298018},
	{-0.96377605, -0.26671275},
	{-0.95694035, -0.2902847},
	{-0.94952816, -0.31368175},
	{-0.94154406, -0.33688986},
	{-0.9329928, -0.35989505},
	{-0.9238795, -0.38268343},
	{-0.9142098, -0.4052413},
	{-0.9039893, -0.42755508},
	{-0.8932243, -0.44961134},
	{-0.88192123, -0.47139674},
	{-0.87008697, -0.4928982},
	{-0.8577286, -0.51410276},
	{-0.8448536, -0.53499764},
	{-0.8314696, -0.55557024},
	{-0.8175848, -0.57580817},
	{-0.8032075, -0.5956993},
	{-0.7883464, -0.6152316},
	{-0.77301043, -0.6343933},
	{-0.7572088, -0.65317285},
	{-0.7409511, -0.671559},
	{-0.7242471, -0.68954057},
	{-0.70710677, -0.70710677},
	{-0.68954057, -0.7242471},
	{-0.671559, -0.7409511},
	{-0.65317285, -0.7572088},
	{-0.6343933, -0.77301043},
	{-0.6152316, -0.7883464},
	{-0.5956993, -0.8032075},
	{-0.57580817, -0.8175848},
	{-0.55557024, -0.8314696},
	{-0.53499764, -0.8448536},
	{-0.51410276, -0.8577286},
	{-0.4928982, -0.87008697},
	{-0.47139674, -0.88192123},
	{-0.44961134, -0.8932243},
	{-0.42755508, -0.9039893},
	{-0.4052413, -0.9142098},
	{-0.38268343, -0.9238795},
	{-0.35989505, -0.9329928},
	{-0.33688986, -0.94154406},
	{-0.31368175, -0.94952816},
	{-0.2902847, -0.95694035},
	{-0.26671275, -0.96377605},
	{-0.24298018, -0.97003126},
	{-0.21910124, -0.9757021},
	{-0.19509032, -0.98078525},
	{-0.17096189, -0.98527765},
	{-0.14673047, -0.9891765},
	{-0.12241068, -0.9924795},
	{-0.09801714, -0.9951847},
	{-0.07356456, -0.99729043},
	{-0.04906767, -0.99879545},
	{-0.02454123, -0.9996988},
	{0, -1},
	{0.02454123, -0.9996988},
	{0.04906767, -0.99879545},
	{0.07356456, -0.99729043},
	{0.09801714, -0.9951847},
	{0.12241068, -0.9924795},
	{0.14673047, -0.9891765},
	{0.17096189, -0.98527765},
	{0.19509032, -0.98078525},
	{0.21910124, -0.9757021},
	{0.24298018, -0.97003126},
	{0.26671275, -0.96377605},
	{0.2902847, -0.95694035},
	{0.31368175, -0.94952816},
	{0.33688986, -0.94154406},
	{0.35989505, -0.9329928},
	{0.38268343, -0.9238795},
	{0.4052413, -0.9142098},
	{0.42755508, -0.9039893},
	{0.44961134, -0.8932243},
	{0.47139674, -0.88192123},
	{0.4928982, -0.87008697},
	{0.51410276, -0.8577286},
	{0.53499764, -0.8448536},
	{0.55557024, -0.8314696},
	{0.57580817, -0.8175848},
	{0.5956993, -0.8032075},
	{0.6152316, -0.7883464},
	{0.6343933, -0.77301043},
	{0.65317285, -0.7572088},
	{0.671559, -0.7409511},
	{0.68954057, -0.7242471},
	{0.70710677, -0.70710677},
	{0.7242471, -0.68954057},
	{0.7409511, -0.671559},
	{0.7572088, -0.65317285},
	{0.77301043, -0.6343933},
	{0.7883464, -0.6152316},
	{0.8032075, -0.5956993},
	{0.8175848, -0.57580817},
	{0.8314696, -0.55557024},
	{0.8448536, -0.53499764},
	{0.8577286, -0.51410276},
	{0.87008697, -0.4928982},
	{0.88192123, -0.47139674},
	{0.8932243, -0.44961134},
	{0.9039893, -0.42755508},
	{0.9142098, -0.4052413},
	{0.9238795, -0.38268343},
	{0.9329928, -0.35989505},
	{0.94154406, -0.33688986},
	{0.94952816, -0.31368175},
	{0.95694035, -0.2902847},
	{0.96377605, -0.26671275},
	{0.97003126, -0.24298018},
	{0.9757021, -0.21910124},
	{0.98078525, -0.19509032},
	{0.98527765, -0.17096189},
	{0.9891765, -0.14673047},
	{0.9924795, -0.12241068},
	{0.9951847, -0.09801714},
	{0.99729043, -0.07356456},
	{0.99879545, -0.04906767},
	{0.9996988, -0.02454123},
}
