name: ci
on:
  push:
    branches:
      - master
      - dev
      - ci_tests
  pull_request:
    branches:
      - master
      - dev

jobs:
  self_hosted_linux_gcc:
    name: alpine-386-gcc-github on Self Host
    runs-on: [linux, ready]
    strategy:
      fail-fast: true
      
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
        
      - name: Set up cache for ccache
        uses: actions/cache@v2
        with:
          path: ccache
          key: ccache-gcc-i386
          restore-keys: |
            ccache-gcc-
            ccache-
        
      - name: Build GCC
        uses: docker://noxworld/alpine-386-gcc-github
        
  self_hosted_linux_wasm:
    name: alpine-wasm-github on Self Host
    runs-on: [linux, ready]
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
            
      - name: Set up cache for emcache
        uses: actions/cache@v2
        with:
          path: emcache
          key: emcache-emsdk-wasm
          restore-keys: |
            emcache-emsdk-
            emcache-
        
      - name: Build WASM
        uses: docker://noxworld/alpine-wasm-github
          
  ubuntu_x86_hosted_gcc:
    name: alpine-386-gcc-github on GitHub Host (Ubuntu 20.04-LTS)
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
        
      - name: Set up cache for ccache
        uses: actions/cache@v2
        with:
          path: ccache
          key: ccache-gcc-i386
          restore-keys: |
            ccache-gcc-
            ccache-
        
      - name: Build GCC
        uses: docker://noxworld/alpine-386-gcc-github
        
  ubuntu_x86_hosted_wasm:
    name: alpine-wasm-github on GitHub Host (Ubuntu 20.04-LTS)
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
            
      - name: Set up cache for emcache
        uses: actions/cache@v2
        with:
          path: emcache
          key: emcache-emsdk-wasm
          restore-keys: |
            emcache-emsdk-
            emcache-

      - name: Build WASM
        uses: docker://noxworld/alpine-wasm-github

  windows_native_hosted:
    name: Windows on ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: true
      matrix:
        config:
          - {
            name: "Windows Server 2019",
            os: windows-2019,
            vcpkg: {
              triplet: x86-windows,
              commitId: '6185aa76504a5025f36754324abf307cc776f3da',
              responseFile: 'vcpkg.txt'
            }
            }

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - uses: lukka/get-cmake@latest

      - name: Restore artifacts, or run vcpkg, build and cache artifacts
        uses: lukka/run-vcpkg@v3
        id: runvcpkg
        with:
          vcpkgArguments: '@${{ github.workspace }}/${{ matrix.config.vcpkg.responseFile }}'
          vcpkgTriplet: '${{ matrix.config.vcpkg.triplet }}'
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: '${{ matrix.config.vcpkg.commitId }}'

      - name: Run CMake+gmake
        uses: lukka/run-cmake@v2
        id: runcmake
        with:
          useVcpkgToolchainFile: true
          cmakeGenerator: 'VS16Win32'
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          cmakeListsTxtPath: '${{ github.workspace }}/src/CMakeLists.txt'
          buildWithCMakeArgs: ''
          buildDirectory: '${{ runner.workspace }}/b/gmake/'
